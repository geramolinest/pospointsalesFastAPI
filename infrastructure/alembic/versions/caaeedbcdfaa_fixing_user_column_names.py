"""Fixing user column names

Revision ID: caaeedbcdfaa
Revises: 9e7de1b1a747
Create Date: 2025-10-21 00:08:59.654187

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'caaeedbcdfaa'
down_revision: Union[str, Sequence[str], None] = '9e7de1b1a747'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('username', sa.String(length=25), nullable=False))
    op.add_column('users', sa.Column('normalized_username', sa.String(length=25), nullable=False))
    op.drop_index(op.f('ix_users_normalized_name'), table_name='users')
    op.drop_index(op.f('usernmae'), table_name='users')
    op.create_index(op.f('ix_users_normalized_username'), 'users', ['normalized_username'], unique=True)
    op.create_unique_constraint(None, 'users', ['username'])
    op.drop_column('users', 'normalized_name')
    op.drop_column('users', 'usernmae')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('usernmae', mysql.VARCHAR(length=25), nullable=False))
    op.add_column('users', sa.Column('normalized_name', mysql.VARCHAR(length=25), nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_normalized_username'), table_name='users')
    op.create_index(op.f('usernmae'), 'users', ['usernmae'], unique=True)
    op.create_index(op.f('ix_users_normalized_name'), 'users', ['normalized_name'], unique=True)
    op.drop_column('users', 'normalized_username')
    op.drop_column('users', 'username')
    # ### end Alembic commands ###
